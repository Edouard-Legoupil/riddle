[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 riddle authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/package-functions.html","id":"ridl","dir":"Articles","previous_headings":"","what":"ridl","title":"Package Functions","text":"","code":"# ridl()"},{"path":"/articles/package-functions.html","id":"dataset_metadata","dir":"Articles","previous_headings":"","what":"dataset_metadata","title":"Package Functions","text":"","code":"m <- dataset_metadata(title = \"Motor Trend Car Road Tests\",                       name = \"mtcars\",                       notes = \"The data was extracted from the 1974 Motor Trend                        US magazine, and comprises fuel consumption and 10 aspects                       of automobile design and performance for 32 automobiles                        (1973–74 models).\",                       owner_org = \"exercise-container\",                       visibility = \"public\",                       geographies = \"UNSPECIFIED\",                       external_access_level = \"open_access\",                       data_collector = \"Motor Trend\",                       keywords = keywords[c(\"Environment\", \"Other\")],                       unit_of_measurement = \"car\",                       data_collection_technique = \"oth\",                       archived = \"False\")  m #> $title #> [1] \"Motor Trend Car Road Tests\" #>  #> $name #> [1] \"mtcars\" #>  #> $notes #> [1] \"The data was extracted from the 1974 Motor Trend \\n                      US magazine, and comprises fuel consumption and 10 aspects\\n                      of automobile design and performance for 32 automobiles \\n                      (1973–74 models).\" #>  #> $owner_org #> [1] \"exercise-container\" #>  #> $visibility #> [1] \"public\" #>  #> $external_access_level #> [1] \"open_access\" #>  #> $data_collector #> [1] \"Motor Trend\" #>  #> $keywords #> Environment       Other  #>        \"11\"        \"54\"  #>  #> $unit_of_measurement #> [1] \"car\" #>  #> $geographies #> [1] \"UNSPECIFIED\" #>  #> $data_collection_technique #> [1] \"oth\" #>  #> $archived #> [1] \"False\""},{"path":"/articles/package-functions.html","id":"dataset_tibblify","dir":"Articles","previous_headings":"","what":"dataset_tibblify","title":"Package Functions","text":"","code":"m <- dataset_metadata(title = \"Motor Trend Car Road Tests\",                       name = \"mtcars\",                       notes = \"The data was extracted from the 1974 Motor Trend                        US magazine, and comprises fuel consumption and 10 aspects                       of automobile design and performance for 32 automobiles                        (1973–74 models).\",                       owner_org = \"exercise-container\",                       visibility = \"public\",                       geographies = \"UNSPECIFIED\",                       external_access_level = \"open_access\",                       data_collector = \"Motor Trend\",                       keywords = keywords[c(\"Environment\", \"Other\")],                       unit_of_measurement = \"car\",                       data_collection_technique = \"oth\",                       archived = \"False\")  m1 <- dataset_tibblify(m) m1 #> # A tibble: 1 × 12 #>   title      name  notes owner…¹ visib…² exter…³ data_…⁴ keywo…⁵ unit_…⁶ geogr…⁷ #>   <chr>      <chr> <chr> <chr>   <chr>   <chr>   <chr>   <list>  <chr>   <chr>   #> 1 Motor Tre… mtca… \"The… exerci… public  open_a… Motor … <chr>   car     UNSPEC… #> # … with 2 more variables: data_collection_technique <chr>, archived <chr>, and #> #   abbreviated variable names ¹​owner_org, ²​visibility, ³​external_access_level, #> #   ⁴​data_collector, ⁵​keywords, ⁶​unit_of_measurement, ⁷​geographies"},{"path":"/articles/package-functions.html","id":"dataset","dir":"Articles","previous_headings":"","what":"dataset","title":"Package Functions","text":"","code":"### TO FIX -- geographies: Missing value ## __type: Validation Error --- ## cf https://github.com/okfn/ckanext-unhcr/blob/master/ckanext/unhcr/schemas/dataset.json#L670:L682  m <- riddle::dataset_metadata(title = \"Motor Trend Car Road Test two\",                       name = \"mtcars_ed\",                       notes = \"The data was extracted from the 1974 Motor Trend                       US magazine, and comprises fuel consumption and 10 aspects                       of automobile design and performance for 32 automobiles                       (1973–74 models).\",                       owner_org = \"Lebanon\",                       visibility = \"public\",                       geographies = \"UNSPECIFIED\",                       external_access_level = \"open_access\",                       data_collector = \"Motor Trend\",                       keywords = keywords[c(\"Environment\", \"Other\")],                       unit_of_measurement = \"car\",                       data_collection_technique = \"oth\",                       archived = \"False\") # ## For the above to work - you need to make sure you have at least editor access # to the corresponding container - i.e. owner_org = \"exercise-container\" #p <- riddle::dataset_create(metadata = m, uat = TRUE) # The return value is a representation of the dataset we just created in # RIDL that you could inspect like any other R object. #p  m <- riddle::dataset_metadata(title = \"Test\",                       name = \"Test\",                       notes = \"The data was extracted from kobo.\",                       owner_org = \"Americas : Regional Datasets\",                       visibility = \"public\",                       geographies = \"UNSPECIFIED\",                       external_access_level = \"open_access\",                       data_collector = \"UNHCR\",                       keywords = keywords[c(\"Environment\", \"Other\")],                       unit_of_measurement = \"car\",                       data_collection_technique = \"oth\",                       archived = \"False\")  riddle::dataset_show(\"unhcr-cbi-americas-quarterly-report\") #> # A tibble: 1 × 54 #>   admin…¹ archi…² author autho…³ clean…⁴ creat…⁵ data_…⁶ data_…⁷ data_…⁸ data_…⁹ #>   <chr>   <chr>   <lgl>  <lgl>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 \"\"      False   NA     NA      \"\"      741434… \"\"      \"\"      cawi    United… #> # … with 44 more variables: data_sensitivity <chr>, date_range_end <chr>, #> #   date_range_start <chr>, external_access_level <chr>, geog_coverage <chr>, #> #   geographies <chr>, id <chr>, identifiability <chr>, isopen <lgl>, #> #   keywords <chr>, kobo_asset_id <chr>, license_id <lgl>, license_title <lgl>, #> #   maintainer <lgl>, maintainer_email <lgl>, metadata_created <chr>, #> #   metadata_modified <chr>, name <chr>, notes <chr>, num_resources <int>, #> #   num_tags <int>, operational_purpose_of_data <chr>, organization <list>, …"},{"path":"/articles/package-functions.html","id":"dataset_search","dir":"Articles","previous_headings":"","what":"dataset_search","title":"Package Functions","text":"","code":"# p <- riddle::dataset_search(q = \"tests\",  #                             uat = TRUE) # p # p$id"},{"path":"/articles/package-functions.html","id":"resource_metadata","dir":"Articles","previous_headings":"","what":"resource_metadata","title":"Package Functions","text":"","code":"#resource_metadata() m <- riddle::resource_metadata(type = \"data\",                        url = \"mtcars.csv\",                        name = \"mtcars.csv\",                        format = \"csv\",                        file_type = \"microdata\",                        date_range_start = \"1973-01-01\",                        date_range_end = \"1973-12-31\",                        version = \"1\",                        visibility = \"public\",                        process_status = \"raw\",                        identifiability = \"anonymized_public\") m #> $type #> [1] \"data\" #>  #> $url #> [1] \"mtcars.csv\" #>  #> $name #> [1] \"mtcars.csv\" #>  #> $format #> [1] \"csv\" #>  #> $file_type #> [1] \"microdata\" #>  #> $date_range_start #> [1] \"1973-01-01\" #>  #> $date_range_end #> [1] \"1973-12-31\" #>  #> $visibility #> [1] \"public\" #>  #> $version #> [1] \"1\" #>  #> $process_status #> [1] \"raw\" #>  #> $identifiability #> [1] \"anonymized_public\""},{"path":"/articles/package-functions.html","id":"resource_tibblify","dir":"Articles","previous_headings":"","what":"resource_tibblify","title":"Package Functions","text":"","code":"m <- riddle::resource_metadata(type = \"data\",                        url = \"mtcars.csv\",                        name = \"mtcars.csv\",                        format = \"csv\",                        file_type = \"microdata\",                        date_range_start = \"1973-01-01\",                        date_range_end = \"1973-12-31\",                        version = \"1\",                        visibility = \"public\",                        process_status = \"raw\",                        identifiability = \"anonymized_public\") m1 <- riddle::resource_tibblify(m) m1 #> # A tibble: 1 × 11 #>   type  url        name   format file_…¹ date_…² date_…³ visib…⁴ version proce…⁵ #>   <chr> <chr>      <chr>  <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 data  mtcars.csv mtcar… csv    microd… 1973-0… 1973-1… public  1       raw     #> # … with 1 more variable: identifiability <chr>, and abbreviated variable names #> #   ¹​file_type, ²​date_range_start, ³​date_range_end, ⁴​visibility, #> #   ⁵​process_status"},{"path":"/articles/package-functions.html","id":"resource","dir":"Articles","previous_headings":"","what":"resource","title":"Package Functions","text":"","code":"## let's get again the details of the dataset we want to add the resource in.. # p <- riddle::dataset_search(\"tests\", uat = TRUE) # ridlid <- as.character(p[1, c(\"id\")])  m <- riddle::resource_metadata(type = \"data\",                        url = \"mtcars.csv\",                        name = \"mtcarsriddle\",                        format = \"csv\",                        file_type = \"microdata\",                        date_range_start = \"1973-01-01\",                        date_range_end = \"1973-12-31\",                        version = \"1\",                        visibility = \"public\",                        process_status = \"raw\",                        identifiability = \"anonymized_public\", upload = httr::upload_file(system.file(\"extdata/mtcars.csv\", package = \"readr\")))  ## let's get again the details of the dataset we want to add the resource in.. #r <- riddle::resource_create(ridlid, res_metadata = m, uat = TRUE) # Like before, the return value is a tibble representation of the resource. #r   ## and now can search for it - checking it is correctly there...  ##riddle::resource_search(\"name:mtcarsriddle\", uat = TRUE)  # And once we’re done experimenting with the API, we should take down our # toy dataset since we don’t really need it on RIDL. #riddle::dataset_delete(p$id, uat = TRUE)"},{"path":"/articles/package-functions.html","id":"resource_fetch","dir":"Articles","previous_headings":"","what":"resource_fetch","title":"Package Functions","text":"","code":"# resource_fetch()"},{"path":"/articles/package-functions.html","id":"summary_report","dir":"Articles","previous_headings":"","what":"summary_report","title":"Package Functions","text":"","code":"# summary_report(year = 2022, #                                    region = \"Americas\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hisham Galal. Author, maintainer. Edouard Legoupil. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Galal H, Legoupil E (2023). riddle: Minimal Client UNHCR RIDL Platform. R package version 0.0.1, https://edouard-legoupil.github.io/riddle/.","code":"@Manual{,   title = {riddle: Minimal Client for the UNHCR RIDL Platform},   author = {Hisham Galal and Edouard Legoupil},   year = {2023},   note = {R package version 0.0.1},   url = {https://edouard-legoupil.github.io/riddle/}, }"},{"path":[]},{"path":"/index.html","id":"riddle","dir":"","previous_headings":"","what":"riddle","title":"Minimal Client for the UNHCR RIDL Platform","text":"minimal package programatically interacting UNHCR Raw Internal Data Library (RIDL). main purpose served package make RIDL API documentation readily accessible within R ecosystem better automation.","code":""},{"path":"/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Minimal Client for the UNHCR RIDL Platform","text":"riddle package requires add API key store use. easiest way store API key .Renviron file automatically read R startup. can retrieve API key user page. api_key_img use package, ’ll need store RIDL API key RIDL_API_KEY environment variable. easiest way calling usethis::edit_r_environ() adding line RIDL_API_KEY=xxxxx file saving restarting R session. package works production UAT instances RIDL (aka “User Acceptance Testing”). use UAT version, add corresponding KEY within .Renviron file: RIDL_API_KEY_UAT=xxxxx. add uat = TRUE parameter function package. way need change RIDL_API_KEY wan switch prod uat server","code":"remotes::install_github(\"edouard-legoupil/riddle\")"},{"path":"/index.html","id":"an-intro-to-ridl-concepts","dir":"","previous_headings":"","what":"An intro to RIDL concepts","title":"Minimal Client for the UNHCR RIDL Platform","text":"order easily use ridlle package, ’s important understand 3 main concepts platform. RIDL based CKAN documentation available details.","code":""},{"path":"/index.html","id":"container","dir":"","previous_headings":"An intro to RIDL concepts","what":"Container","title":"Minimal Client for the UNHCR RIDL Platform","text":"container placeholder can share data RIDL. container can hold zero multiple datasets. convention operations datasets grouped together within container operation container can also include multiple specific containers. Container documented within dataset metadata variable owner_org Container URL typically formatted : > https://ridl.unhcr.org/data-container/`__name_of_country__`","code":""},{"path":"/index.html","id":"dataset","dir":"","previous_headings":"An intro to RIDL concepts","what":"Dataset","title":"Minimal Client for the UNHCR RIDL Platform","text":"dataset placeholder can share series data documentation files (called resources - see ), eac linked data project. dataset described metadata (using data documentation initiative (DDI) format) gives enough context project information properly store data files use . Dataset URL typically formatted : > https://ridl.unhcr.org/dataset/`__name_of_dataset__` Data files, e.g Excel file, well supporting documentation called resource shared either data attachment within specific dataset page.","code":""},{"path":"/index.html","id":"resource","dir":"","previous_headings":"An intro to RIDL concepts","what":"Resource","title":"Minimal Client for the UNHCR RIDL Platform","text":"resource file shared dataset page. Depending type ( data attachment ) , comes specific minimum metadata complement metata project . Resources URL typically formatted : > https://ridl.unhcr.org/dataset/`__name_of_dataset__`/resource/`__id_of_the_resource__`","code":""},{"path":"/index.html","id":"how-to","dir":"","previous_headings":"","what":"How to","title":"Minimal Client for the UNHCR RIDL Platform","text":"UNHCR staff, access series containers based working. Within container, editor admin right, can create dataset.","code":""},{"path":"/index.html","id":"use-case-1-create-a-new-dataset","dir":"","previous_headings":"How to","what":"Use case 1: create a new dataset","title":"Minimal Client for the UNHCR RIDL Platform","text":"create dataset, need first document dataset metadata, including reference container like new dataset created. dataset created, can add many resources required (either data attachment).","code":"library(riddle) ## First we create the dataset metadata m <- dataset_metadata(title = \"Motor Trend Car Road Tests\",                       name = \"mtcars\",                       notes = \"The data was extracted from the 1974 Motor Trend                        US magazine, and comprises fuel consumption and 10 aspects                       of automobile design and performance for 32 automobiles                        (1973–74 models).\",                       owner_org = \"exercise-container\",                       visibility = \"public\",                       external_access_level = \"open_access\",                       data_collector = \"Motor Trend\",                       keywords = keywords[c(\"Environment\", \"Other\")],                       unit_of_measurement = \"car\",                       data_collection_technique = \"oth\",                       archived = \"False\")                        ## For the above to work - you need to make sure you have at least editor access # to the corresponding container - i.e. owner_org = \"exercise-container\" p <- dataset_create(m, uat = TRUE)  # The return value is a representation of the dataset we just created in # RIDL that you could inspect like any other R object. p"},{"path":"/index.html","id":"use-case-2-add-a-new-data-file","dir":"","previous_headings":"How to","what":"Use case 2: add a new data file","title":"Minimal Client for the UNHCR RIDL Platform","text":"Ideally, data resources kobotoolbox added using API connection described Part 4 documentation. Though, might specific cases building operational dataset, scrapping official data source web within PDF want add regular basis new data resource within existing dataset. can check practical example use case :darien_gap_human_mobility simple example using mtcars dataset example.","code":"library(riddle) ## let's get again the details of the dataset we want to add the resource in  # based on a search... p <- dataset_search(\"tests\") m <- resource_metadata(type = \"data\",                        url = \"mtcars.csv\",                        name = \"mtcars.csv\",                        format = \"csv\",                        file_type = \"microdata\",                        date_range_start = \"1973-01-01\",                        date_range_end = \"1973-12-31\",                        version = \"1\",                        visibility = \"public\",                        process_status = \"raw\",                        identifiability = \"anonymized_public\") ## let's get again the details of the dataset we want to add the resource in.. r <- resource_create(p$id, m, uat = TRUE)  # Like before, the return value is a tibble representation of the # resource. r  # But so far we’ve only created the metadata for the resource. The next # step is to upload the data. ## not sure why this function is not there... ## resource_upload(r$id, path = system.file(\"extdata/mtcars.csv\", package = \"readr\"))  ## and now can search for it - checking it is correctly there...  resource_search(\"name:mtcars\")  # And once we’re done experimenting with the API, we should take down our # toy dataset since we don’t really need it on RIDL. dataset_delete(p$id)"},{"path":"/index.html","id":"use-case-2-add-attachment","dir":"","previous_headings":"How to","what":"Use case 2: Add attachment","title":"Minimal Client for the UNHCR RIDL Platform","text":"want add initial data exploration, data interpretation presentation /data story telling report new attachement resource within dataset. can check practical example use case :kobocruncher","code":"library(riddle)"},{"path":"/reference/apihelper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to make API calls — apihelper","title":"Helper function to make API calls — apihelper","text":"Helper function make API calls","code":""},{"path":"/reference/apihelper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to make API calls — apihelper","text":"","code":"ridl(action, ..., .encoding = \"json\")"},{"path":"/reference/apihelper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to make API calls — apihelper","text":"action Operation execute. See CKAN's API documentation details. .encoding HTTP POST encoding use - one json, form, multipart.","code":""},{"path":"/reference/apihelper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to make API calls — apihelper","text":"httr::response object result call.","code":""},{"path":"/reference/apihelper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to make API calls — apihelper","text":"","code":"#ridl()"},{"path":"/reference/dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Work with RIDL datasets (datasets) — dataset","title":"Work with RIDL datasets (datasets) — dataset","text":"Work RIDL datasets (datasets)","code":""},{"path":"/reference/dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Work with RIDL datasets (datasets) — dataset","text":"","code":"dataset_create(metadata, uat = FALSE)  dataset_show(id, uat = FALSE)  dataset_update(id, metadata, uat = FALSE)  dataset_patch(id, metadata, uat = FALSE)  dataset_delete(id, uat = FALSE)"},{"path":"/reference/dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Work with RIDL datasets (datasets) — dataset","text":"metadata Metadata created dataset_metadata(). uat Boolean TRUE /FALSE tells whether use https://ridl-uat.unhcr.org/ https://ridl.unhcr.org/. FALSE per default id id name dataset.","code":""},{"path":"/reference/dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Work with RIDL datasets (datasets) — dataset","text":"dataset.","code":""},{"path":"/reference/dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Work with RIDL datasets (datasets) — dataset","text":"must necessary permissions create, edit, delete datasets. Note several fields required dataset_create() dataset_update() operations succeed. Consult dataset_metadata() details. dataset_update()/dataset_patch() operations, recommended call dataset_show(), make desired changes result, call dataset_update()/dataset_patch() . difference update patch methods patch perform update provided parameters, leaving parameters unchanged, whereas update methods deletes parameters explicitly provided metadata.","code":""},{"path":"/reference/dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Work with RIDL datasets (datasets) — dataset","text":"","code":"### TO FIX -- geographies: Missing value ## __type: Validation Error --- ## cf https://github.com/okfn/ckanext-unhcr/blob/master/ckanext/unhcr/schemas/dataset.json#L670:L682  m <- riddle::dataset_metadata(title = \"Motor Trend Car Road Test two\",                       name = \"mtcars_ed\",                       notes = \"The data was extracted from the 1974 Motor Trend                       US magazine, and comprises fuel consumption and 10 aspects                       of automobile design and performance for 32 automobiles                       (1973–74 models).\",                       owner_org = \"Lebanon\",                       visibility = \"public\",                       geographies = \"UNSPECIFIED\",                       external_access_level = \"open_access\",                       data_collector = \"Motor Trend\",                       keywords = keywords[c(\"Environment\", \"Other\")],                       unit_of_measurement = \"car\",                       data_collection_technique = \"oth\",                       archived = \"False\") # ## For the above to work - you need to make sure you have at least editor access # to the corresponding container - i.e. owner_org = \"exercise-container\" #p <- riddle::dataset_create(metadata = m, uat = TRUE) # The return value is a representation of the dataset we just created in # RIDL that you could inspect like any other R object. #p  m <- riddle::dataset_metadata(title = \"Test\",                       name = \"Test\",                       notes = \"The data was extracted from kobo.\",                       owner_org = \"Americas : Regional Datasets\",                       visibility = \"public\",                       geographies = \"UNSPECIFIED\",                       external_access_level = \"open_access\",                       data_collector = \"UNHCR\",                       keywords = keywords[c(\"Environment\", \"Other\")],                       unit_of_measurement = \"car\",                       data_collection_technique = \"oth\",                       archived = \"False\")  riddle::dataset_show(\"unhcr-cbi-americas-quarterly-report\") #> # A tibble: 1 × 54 #>   admin…¹ archi…² author autho…³ clean…⁴ creat…⁵ data_…⁶ data_…⁷ data_…⁸ data_…⁹ #>   <chr>   <chr>   <lgl>  <lgl>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 \"\"      False   NA     NA      \"\"      741434… \"\"      \"\"      cawi    United… #> # … with 44 more variables: data_sensitivity <chr>, date_range_end <chr>, #> #   date_range_start <chr>, external_access_level <chr>, geog_coverage <chr>, #> #   geographies <chr>, id <chr>, identifiability <chr>, isopen <lgl>, #> #   keywords <chr>, kobo_asset_id <chr>, license_id <lgl>, license_title <lgl>, #> #   maintainer <lgl>, maintainer_email <lgl>, metadata_created <chr>, #> #   metadata_modified <chr>, name <chr>, notes <chr>, num_resources <int>, #> #   num_tags <int>, operational_purpose_of_data <chr>, organization <list>, …"},{"path":"/reference/dataset_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to record dataset metadata — dataset_metadata","title":"Convenience function to record dataset metadata — dataset_metadata","text":"function create metadata object used interact API","code":""},{"path":"/reference/dataset_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to record dataset metadata — dataset_metadata","text":"","code":"dataset_metadata(   title = NULL,   name = NULL,   short_title = NULL,   notes = NULL,   tag_string = NULL,   url = NULL,   owner_org = NULL,   geographies = \"UNSPECIFIED\",   private = NULL,   visibility = NULL,   external_access_level = NULL,   data_sensitivity = NULL,   original_id = NULL,   data_collector = NULL,   date_range_start = NULL,   date_range_end = NULL,   keywords = NULL,   unit_of_measurement = NULL,   sampling_procedure = NULL,   operational_purpose_of_data = NULL,   `hxl-ated` = NULL,   process_status = NULL,   identifiability = NULL,   geog_coverage = NULL,   data_collection_technique = NULL,   linked_datasets = NULL,   archived = NULL,   admin_notes = NULL,   sampling_procedure_notes = NULL,   response_rate_notes = NULL,   data_collection_notes = NULL,   weight_notes = NULL,   clean_ops_notes = NULL,   data_accs_notes = NULL,   ddi = NULL,   ... )"},{"path":"/reference/dataset_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to record dataset metadata — dataset_metadata","text":"title Title(*) - Make sure include: 'Survey name/title', 'Location', 'Country', 'Year(s)' order indicated. name URL(*) - canonical name dataset, eg. -dataset. short_title Short title - eg. Short title project. notes Description(*) - useful notes data. Please include number observations. tag_string Tags - eg. economy, mental health, government. url Project URL - Website URL associated data project (applicable). owner_org Data container(*) - Use canonical name container. geographies defaults geographies - pulling webservice geoserver private Visibility (Private/Public). visibility Internal Access Level(*). Allowed values: restricted (Private), public (Internally Visible). external_access_level External access level(*). Allowed values: not_available (available), direct_access (Direct access), public_use (Public use), licensed_use (Licensed use), data_enclave (Data enclave), open_access (Open access). data_sensitivity Data sensitivity - Apply Anonymized Personally identifiable data. Allowed values: yes (Yes), (). original_id Original ID - dataset already ID source org, DDI, etc... data_collector Data Collector(*) - organization owns / collected data. Multiple values allowed. date_range_start Date collection first date - Use dd/mm/yyyy format. date_range_end Date collection last date - Use dd/mm/yyyy format. keywords Topic classifications(*) - Tags useful searching datasets. Multiple values allowed. See keywords unit_of_measurement Unit measurement(*) - Unit measurement / observation dataset. sampling_procedure Sampling Procedure. Multiple values allowed. Allowed values: total_universe_complete_enumeration (Total universe/Complete enumeration), probability_simple_random (Probability: Simple random), probability_systematic_random (Probability: Systematic random), probability_stratified (Probability: Stratified), probability_stratified_proportional (Probability: Stratified: Proportional), probability_stratified_disproportional (Probability: Stratified: Disproportional), probability_cluster (Probability: Cluster), probability_cluster_simple_random (Probability: Cluster: Simple random ), probability_cluster_stratified_random (Probability: Cluster: Stratified random), probability_multistage (Probability: Multistage), nonprobability (Non-probability), nonprobability_availability (Non-probability: Availability), nonprobability_purposive (Non-probability: Purposive), nonprobability_quota (Non-probability: Quota), nonprobability_respondentassisted (Non-probability: Respondent-assisted), mixed_probability_nonprobability (Mixed probability non-probability), other_other (Use sampling procedure known, found list..). operational_purpose_of_data Operational purpose data - Classification type data contained file. Multiple values allowed. Allowed values: participatory_assessments (Participatory assessments), baseline_household_survey (Baseline Household Survey), rapid_needs_assessment (Rapid Needs Assessment), protection_monitoring (Protection Monitoring), programme_monitoring (Programme monitoring), population_data (Population Data), cartography (Cartography, Infrastructure & GIS). process_status Dataset Process Status. Allowed values: raw (Raw-Uncleaned), cleaned (Cleaned ), anonymized (Cleaned & Anonymized). identifiability Identifiability. Allowd values: personally_identifiable (Personally identifiable), anonymized_enclave (Anonymized 1st level: Data Enclave - removed direct identifiers), anonymized_scientific (Anonymized 2st level: Scientific Use File (SUF)), anonymized_public (Anonymized 3rd level: Public Use File (PUF)). geog_coverage Geographic Coverage - eg. National coverage, name area, etc. data_collection_technique Data collection technique(*). Allowed values: nf (specified), f2f (Face--face interview), capi (Face--face interview: Computerised), cami (Face--face interview: Mobile), papi (Face--face interview: Paper--pencil), tri (Telephone interview), eri (E-mail interview), wri (Web-based interview: audio-visual technology enabling interviewer(s) interviewee(s) communicate real time), easi (Self-administered questionnaire: E-mail), pasi (Self-administered questionnaire: Paper), sasi (Self-administered questionnaire: SMS/MMS), casi (Self-administered questionnaire: Computer-assisted), cawi (Self-administered questionnaire: Web-based), foc (Face--face focus group), tfoc (Telephone focus group), obs (Observation), oth (). linked_datasets Linked Datasets - Links RIDL datasets. supports multiple selections. archived Archived(*) - Allows users indicate dataset archived active. Allowed values: False (), True (Yes). admin_notes Admin Notes - General. can use Markdown formatting . sampling_procedure_notes Admin Notes - Sampling Procedure. can use Markdown formatting . response_rate_notes Admin Notes - Response Rate. can use Markdown formatting . data_collection_notes Admin Notes - Data Collection. can use Markdown formatting . weight_notes Admin Notes - Weighting. can use Markdown formatting . clean_ops_notes Admin Notes - Cleaning. can use Markdown formatting . data_accs_notes Admin Notes - Access authority. can use Markdown formatting . ddi DDI. ... ignored. `hxl-ated` HXL-ated.","code":""},{"path":"/reference/dataset_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function to record dataset metadata — dataset_metadata","text":"list provided metadata.","code":""},{"path":"/reference/dataset_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convenience function to record dataset metadata — dataset_metadata","text":"arguments type character. Fields tag_string, data_collector, keywords, sampling_procedure, operational_purpose_of_data accept vectors multiple values. Fields marked (*) required dataset_create() dataset_update() operations.","code":""},{"path":"/reference/dataset_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience function to record dataset metadata — dataset_metadata","text":"","code":"m <- dataset_metadata(title = \"Motor Trend Car Road Tests\",                       name = \"mtcars\",                       notes = \"The data was extracted from the 1974 Motor Trend                        US magazine, and comprises fuel consumption and 10 aspects                       of automobile design and performance for 32 automobiles                        (1973–74 models).\",                       owner_org = \"exercise-container\",                       visibility = \"public\",                       geographies = \"UNSPECIFIED\",                       external_access_level = \"open_access\",                       data_collector = \"Motor Trend\",                       keywords = keywords[c(\"Environment\", \"Other\")],                       unit_of_measurement = \"car\",                       data_collection_technique = \"oth\",                       archived = \"False\")  m #> $title #> [1] \"Motor Trend Car Road Tests\" #>  #> $name #> [1] \"mtcars\" #>  #> $notes #> [1] \"The data was extracted from the 1974 Motor Trend \\n                      US magazine, and comprises fuel consumption and 10 aspects\\n                      of automobile design and performance for 32 automobiles \\n                      (1973–74 models).\" #>  #> $owner_org #> [1] \"exercise-container\" #>  #> $visibility #> [1] \"public\" #>  #> $external_access_level #> [1] \"open_access\" #>  #> $data_collector #> [1] \"Motor Trend\" #>  #> $keywords #> Environment       Other  #>        \"11\"        \"54\"  #>  #> $unit_of_measurement #> [1] \"car\" #>  #> $geographies #> [1] \"UNSPECIFIED\" #>  #> $data_collection_technique #> [1] \"oth\" #>  #> $archived #> [1] \"False\" #>"},{"path":"/reference/dataset_tibblify.html","id":null,"dir":"Reference","previous_headings":"","what":"dataset_tibblify — dataset_tibblify","title":"dataset_tibblify — dataset_tibblify","text":"Helper function package API results  tibble","code":""},{"path":"/reference/dataset_tibblify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dataset_tibblify — dataset_tibblify","text":"","code":"dataset_tibblify(x)"},{"path":"/reference/dataset_tibblify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dataset_tibblify — dataset_tibblify","text":"x dataset list","code":""},{"path":"/reference/dataset_tibblify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dataset_tibblify — dataset_tibblify","text":"dataset","code":""},{"path":"/reference/dataset_tibblify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dataset_tibblify — dataset_tibblify","text":"","code":"m <- dataset_metadata(title = \"Motor Trend Car Road Tests\",                       name = \"mtcars\",                       notes = \"The data was extracted from the 1974 Motor Trend                        US magazine, and comprises fuel consumption and 10 aspects                       of automobile design and performance for 32 automobiles                        (1973–74 models).\",                       owner_org = \"exercise-container\",                       visibility = \"public\",                       geographies = \"UNSPECIFIED\",                       external_access_level = \"open_access\",                       data_collector = \"Motor Trend\",                       keywords = keywords[c(\"Environment\", \"Other\")],                       unit_of_measurement = \"car\",                       data_collection_technique = \"oth\",                       archived = \"False\")  m1 <- dataset_tibblify(m) m1 #> # A tibble: 1 × 12 #>   title      name  notes owner…¹ visib…² exter…³ data_…⁴ keywo…⁵ unit_…⁶ geogr…⁷ #>   <chr>      <chr> <chr> <chr>   <chr>   <chr>   <chr>   <list>  <chr>   <chr>   #> 1 Motor Tre… mtca… \"The… exerci… public  open_a… Motor … <chr>   car     UNSPEC… #> # … with 2 more variables: data_collection_technique <chr>, archived <chr>, and #> #   abbreviated variable names ¹​owner_org, ²​visibility, ³​external_access_level, #> #   ⁴​data_collector, ⁵​keywords, ⁶​unit_of_measurement, ⁷​geographies"},{"path":"/reference/keywords.html","id":null,"dir":"Reference","previous_headings":"","what":"dataset keywords — keywords","title":"dataset keywords — keywords","text":"extracted dataset schema.","code":""},{"path":"/reference/keywords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dataset keywords — keywords","text":"","code":"keywords"},{"path":"/reference/keywords.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dataset keywords — keywords","text":"named character vector mapping user-visible labels (names) corresponding codes system (values).","code":""},{"path":"/reference/package.html","id":null,"dir":"Reference","previous_headings":"","what":"Work with RIDL datasets (packages) — package","title":"Work with RIDL datasets (packages) — package","text":"Work RIDL datasets (packages)","code":""},{"path":"/reference/package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Work with RIDL datasets (packages) — package","text":"","code":"package_create(metadata)  package_show(id)  package_update(id, metadata)  package_patch(id, metadata)  package_delete(id)"},{"path":"/reference/package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Work with RIDL datasets (packages) — package","text":"metadata Metadata created package_metadata(). id id name dataset.","code":""},{"path":"/reference/package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Work with RIDL datasets (packages) — package","text":"dataset.","code":""},{"path":"/reference/package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Work with RIDL datasets (packages) — package","text":"must necessary permissions create, edit, delete packages. Note several fields required package_create() package_update() operations succeed. Consult package_metadata() details. package_update()/package_patch() operations, recommended call package_show(), make desired changes result, call package_update()/package_patch() . difference update patch methods patch perform update provided parameters, leaving parameters unchanged, whereas update methods deletes parameters explicitly provided metadata.","code":""},{"path":[]},{"path":"/reference/package_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to record package metadata — package_metadata","text":"","code":"package_metadata(   title = NULL,   name = NULL,   short_title = NULL,   notes = NULL,   tag_string = NULL,   url = NULL,   owner_org = NULL,   private = NULL,   visibility = NULL,   external_access_level = NULL,   data_sensitivity = NULL,   original_id = NULL,   data_collector = NULL,   date_range_start = NULL,   date_range_end = NULL,   keywords = NULL,   unit_of_measurement = NULL,   sampling_procedure = NULL,   operational_purpose_of_data = NULL,   `hxl-ated` = NULL,   process_status = NULL,   identifiability = NULL,   geog_coverage = NULL,   data_collection_technique = NULL,   linked_datasets = NULL,   archived = NULL,   admin_notes = NULL,   sampling_procedure_notes = NULL,   response_rate_notes = NULL,   data_collection_notes = NULL,   weight_notes = NULL,   clean_ops_notes = NULL,   data_accs_notes = NULL,   ddi = NULL,   ... )"},{"path":"/reference/package_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to record package metadata — package_metadata","text":"title Title(*) - Make sure include: 'Survey name/title', 'Location', 'Country', 'Year(s)' order indicated. name URL(*) - canonical name dataset, eg. -dataset. short_title Short title - eg. Short title project. notes Description(*) - useful notes data. Please include number observations. tag_string Tags - eg. economy, mental health, government. url Project URL - Website URL associated data project (applicable). owner_org Data container(*) - Use canonical name container. private Visibility (Private/Public). visibility Internal Access Level(*). Allowed values: restricted (Private), public (Internally Visible). external_access_level External access level(*). Allowed values: not_available (available), direct_access (Direct access), public_use (Public use), licensed_use (Licensed use), data_enclave (Data enclave), open_access (Open access). data_sensitivity Data sensitivity - Apply Anonymized Personally identifiable data. Allowed values: yes (Yes), (). original_id Original ID - dataset already ID source org, DDI, etc... data_collector Data Collector(*) - organization owns / collected data. Multiple values allowed. date_range_start Date collection first date - Use dd/mm/yyyy format. date_range_end Date collection last date - Use dd/mm/yyyy format. keywords Topic classifications(*) - Tags useful searching datasets. Multiple values allowed. See keywords unit_of_measurement Unit measurement(*) - Unit measurement / observation dataset. sampling_procedure Sampling Procedure. Multiple values allowed. Allowed values: total_universe_complete_enumeration (Total universe/Complete enumeration), probability_simple_random (Probability: Simple random), probability_systematic_random (Probability: Systematic random), probability_stratified (Probability: Stratified), probability_stratified_proportional (Probability: Stratified: Proportional), probability_stratified_disproportional (Probability: Stratified: Disproportional), probability_cluster (Probability: Cluster), probability_cluster_simple_random (Probability: Cluster: Simple random ), probability_cluster_stratified_random (Probability: Cluster: Stratified random), probability_multistage (Probability: Multistage), nonprobability (Non-probability), nonprobability_availability (Non-probability: Availability), nonprobability_purposive (Non-probability: Purposive), nonprobability_quota (Non-probability: Quota), nonprobability_respondentassisted (Non-probability: Respondent-assisted), mixed_probability_nonprobability (Mixed probability non-probability), other_other (Use sampling procedure known, found list..). operational_purpose_of_data Operational purpose data - Classification type data contained file. Multiple values allowed. Allowed values: participatory_assessments (Participatory assessments), baseline_household_survey (Baseline Household Survey), rapid_needs_assessment (Rapid Needs Assessment), protection_monitoring (Protection Monitoring), programme_monitoring (Programme monitoring), population_data (Population Data), cartography (Cartography, Infrastructure & GIS). process_status Dataset Process Status. Allowed values: raw (Raw-Uncleaned), cleaned (Cleaned ), anonymized (Cleaned & Anonymized). identifiability Identifiability. Allowd values: personally_identifiable (Personally identifiable), anonymized_enclave (Anonymized 1st level: Data Enclave - removed direct identifiers), anonymized_scientific (Anonymized 2st level: Scientific Use File (SUF)), anonymized_public (Anonymized 3rd level: Public Use File (PUF)). geog_coverage Geographic Coverage - eg. National coverage, name area, etc. data_collection_technique Data collection technique(*). Allowed values: nf (specified), f2f (Face--face interview), capi (Face--face interview: Computerised), cami (Face--face interview: Mobile), papi (Face--face interview: Paper--pencil), tri (Telephone interview), eri (E-mail interview), wri (Web-based interview: audio-visual technology enabling interviewer(s) interviewee(s) communicate real time), easi (Self-administered questionnaire: E-mail), pasi (Self-administered questionnaire: Paper), sasi (Self-administered questionnaire: SMS/MMS), casi (Self-administered questionnaire: Computer-assisted), cawi (Self-administered questionnaire: Web-based), foc (Face--face focus group), tfoc (Telephone focus group), obs (Observation), oth (). linked_datasets Linked Datasets - Links RIDL datasets. supports multiple selections. archived Archived(*) - Allows users indicate dataset archived active. Allowed values: False (), True (Yes). admin_notes Admin Notes - General. can use Markdown formatting . sampling_procedure_notes Admin Notes - Sampling Procedure. can use Markdown formatting . response_rate_notes Admin Notes - Response Rate. can use Markdown formatting . data_collection_notes Admin Notes - Data Collection. can use Markdown formatting . weight_notes Admin Notes - Weighting. can use Markdown formatting . clean_ops_notes Admin Notes - Cleaning. can use Markdown formatting . data_accs_notes Admin Notes - Access authority. can use Markdown formatting . ddi DDI. ... ignored. `hxl-ated` HXL-ated.","code":""},{"path":"/reference/package_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function to record package metadata — package_metadata","text":"list provided metadata.","code":""},{"path":"/reference/package_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convenience function to record package metadata — package_metadata","text":"arguments type character. Fields tag_string, data_collector, keywords, sampling_procedure, operational_purpose_of_data accept vectors multiple values. Fields marked (*) required package_create() package_update() operations.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Work with RIDL resources (files) — resource","title":"Work with RIDL resources (files) — resource","text":"Work RIDL resources (files)","code":""},{"path":"/reference/resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Work with RIDL resources (files) — resource","text":"","code":"resource_create(pkgid, res_metadata, uat)  resource_update(id, res_metadata, uat)  resource_patch(id, res_metadata, uat)  resource_delete(id, uat)"},{"path":"/reference/resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Work with RIDL resources (files) — resource","text":"pkgid id name dataset resource belongs . res_metadata Metadata created resource_metadata(). uat Boolean TRUE /FALSE tells whether use https://ridl-uat.unhcr.org/ https://ridl.unhcr.org/. FALSE per default id id name resource.","code":""},{"path":"/reference/resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Work with RIDL resources (files) — resource","text":"resource.","code":""},{"path":"/reference/resource.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Work with RIDL resources (files) — resource","text":"must necessary permissions create, edit, delete datasets resources. Note several fields required resource_create() resource_update() operations succeed. Consult resource_metadata() details. resource_update()/resource_patch() operations, recommended call resource_show(), make desired changes result, call resource_update()/resource_patch() . difference update patch methods patch perform update provided parameters, leaving parameters unchanged, whereas update methods deletes parameters explicitly provided metadata.","code":""},{"path":"/reference/resource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Work with RIDL resources (files) — resource","text":"","code":"## let's get again the details of the dataset we want to add the resource in.. # p <- riddle::dataset_search(\"tests\", uat = TRUE) # ridlid <- as.character(p[1, c(\"id\")])  m <- riddle::resource_metadata(type = \"data\",                        url = \"mtcars.csv\",                        name = \"mtcarsriddle\",                        format = \"csv\",                        file_type = \"microdata\",                        date_range_start = \"1973-01-01\",                        date_range_end = \"1973-12-31\",                        version = \"1\",                        visibility = \"public\",                        process_status = \"raw\",                        identifiability = \"anonymized_public\", upload = httr::upload_file(system.file(\"extdata/mtcars.csv\", package = \"readr\")))  ## let's get again the details of the dataset we want to add the resource in.. #r <- riddle::resource_create(ridlid, res_metadata = m, uat = TRUE) # Like before, the return value is a tibble representation of the resource. #r   ## and now can search for it - checking it is correctly there...  ##riddle::resource_search(\"name:mtcarsriddle\", uat = TRUE)  # And once we’re done experimenting with the API, we should take down our # toy dataset since we don’t really need it on RIDL. #riddle::dataset_delete(p$id, uat = TRUE)"},{"path":"/reference/resource_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch resource from RIDL — resource_fetch","title":"Fetch resource from RIDL — resource_fetch","text":"Fetch resource RIDL","code":""},{"path":"/reference/resource_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch resource from RIDL — resource_fetch","text":"","code":"resource_fetch(url, path = tempfile(), uat = FALSE)"},{"path":"/reference/resource_fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch resource from RIDL — resource_fetch","text":"url URL resource fetch path Location store resource uat Boolean TRUE /FALSE tells whether use https://ridl-uat.unhcr.org/ https://ridl.unhcr.org/. FALSE per default","code":""},{"path":"/reference/resource_fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch resource from RIDL — resource_fetch","text":"Path downloaded file","code":""},{"path":"/reference/resource_fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch resource from RIDL — resource_fetch","text":"","code":"# resource_fetch()"},{"path":"/reference/resource_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to record resource metadata — resource_metadata","title":"Convenience function to record resource metadata — resource_metadata","text":"functions create resource metadata","code":""},{"path":"/reference/resource_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to record resource metadata — resource_metadata","text":"","code":"resource_metadata(   type = NULL,   url = NULL,   name = NULL,   description = NULL,   format = NULL,   file_type = NULL,   date_range_start = NULL,   date_range_end = NULL,   upload = NULL,   visibility = NULL,   version = NULL,   `hxl-ated` = NULL,   process_status = NULL,   identifiability = NULL,   ... )"},{"path":"/reference/resource_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to record resource metadata — resource_metadata","text":"type Resource type(*) - kind file want upload. Allowed values: data (Data file), attachment (Additional attachment). url Upload - file name recorded system. name Name - eg. January 2011 Gold Prices. description Description - usefule notes data. format File format - eg. CSV, XML, JSON. file_type File type(*) - Indicates contained file. Allowed values: microdata (Microdata), questionnaire (Questionnaire), report (Report), sampling_methodology (Sampling strategy & methodology Description), infographics (Infographics & Dashboard), script (Script), concept note (Concept Note), (). date_range_start Data collection first date(*) - Use yyyy-mm-dd format. date_range_end Data collection last date(*) - Use yyyy-mm-dd format. upload File upload. Passed using httr::upload_file(). visibility either version Version(*). process_status File process status(*) - Indicates processing stage data. 'Raw' means data cleaned since collection. 'process' means cleaned. 'Final' means dataset final ready use analytical products. Allowed valued: raw (Raw-Uncleaned), cleaned (Cleaned ), anonymized (Cleaned & Anonymized). identifiability Identifiability(*) - Indicates personally identifiable data contained dataset. Allowed values: personally_identifiable (Personally identifiable), anonymized_enclave (Anonymized 1st level: Data Enclave - removed direct identifiers), anonymized_scientific (Anonymized 2st level: Scientific Use File (SUF)), anonymized_public (Anonymized 3st level: Public Use File (PUF)). ... ignored. `hxl-ated` HXL-ated. Allowed values: False (), True (Yes).","code":""},{"path":"/reference/resource_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function to record resource metadata — resource_metadata","text":"list provided metadata.","code":""},{"path":"/reference/resource_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convenience function to record resource metadata — resource_metadata","text":"arguments type character. Fields marked (*) required resource_create() resource_update() operations.","code":""},{"path":"/reference/resource_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience function to record resource metadata — resource_metadata","text":"","code":"#resource_metadata() m <- riddle::resource_metadata(type = \"data\",                        url = \"mtcars.csv\",                        name = \"mtcars.csv\",                        format = \"csv\",                        file_type = \"microdata\",                        date_range_start = \"1973-01-01\",                        date_range_end = \"1973-12-31\",                        version = \"1\",                        visibility = \"public\",                        process_status = \"raw\",                        identifiability = \"anonymized_public\") m #> $type #> [1] \"data\" #>  #> $url #> [1] \"mtcars.csv\" #>  #> $name #> [1] \"mtcars.csv\" #>  #> $format #> [1] \"csv\" #>  #> $file_type #> [1] \"microdata\" #>  #> $date_range_start #> [1] \"1973-01-01\" #>  #> $date_range_end #> [1] \"1973-12-31\" #>  #> $visibility #> [1] \"public\" #>  #> $version #> [1] \"1\" #>  #> $process_status #> [1] \"raw\" #>  #> $identifiability #> [1] \"anonymized_public\" #>"},{"path":"/reference/resource_tibblify.html","id":null,"dir":"Reference","previous_headings":"","what":"resource_tibblify — resource_tibblify","title":"resource_tibblify — resource_tibblify","text":"Helper function package API results  tibble","code":""},{"path":"/reference/resource_tibblify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"resource_tibblify — resource_tibblify","text":"","code":"resource_tibblify(x)"},{"path":"/reference/resource_tibblify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"resource_tibblify — resource_tibblify","text":"x list","code":""},{"path":"/reference/resource_tibblify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"resource_tibblify — resource_tibblify","text":"list tiblified","code":""},{"path":"/reference/resource_tibblify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"resource_tibblify — resource_tibblify","text":"","code":"m <- riddle::resource_metadata(type = \"data\",                        url = \"mtcars.csv\",                        name = \"mtcars.csv\",                        format = \"csv\",                        file_type = \"microdata\",                        date_range_start = \"1973-01-01\",                        date_range_end = \"1973-12-31\",                        version = \"1\",                        visibility = \"public\",                        process_status = \"raw\",                        identifiability = \"anonymized_public\") m1 <- riddle::resource_tibblify(m) m1 #> # A tibble: 1 × 11 #>   type  url        name   format file_…¹ date_…² date_…³ visib…⁴ version proce…⁵ #>   <chr> <chr>      <chr>  <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 data  mtcars.csv mtcar… csv    microd… 1973-0… 1973-1… public  1       raw     #> # … with 1 more variable: identifiability <chr>, and abbreviated variable names #> #   ¹​file_type, ²​date_range_start, ³​date_range_end, ⁴​visibility, #> #   ⁵​process_status"},{"path":"/reference/riddle-package.html","id":null,"dir":"Reference","previous_headings":"","what":"riddle: Minimal Client for the UNHCR RIDL Platform — riddle-package","title":"riddle: Minimal Client for the UNHCR RIDL Platform — riddle-package","text":"Wrapper functions work RIDL API R","code":""},{"path":"/reference/riddle-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"riddle: Minimal Client for the UNHCR RIDL Platform — riddle-package","text":"Maintainer: Hisham Galal galal@unhcr.org","code":""},{"path":"/reference/ridl.html","id":null,"dir":"Reference","previous_headings":"","what":"apihelper — ridl","title":"apihelper — ridl","text":"Helper function make API calls","code":""},{"path":"/reference/ridl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"apihelper — ridl","text":"","code":"ridl(action, ..., .encoding = \"json\", uat = FALSE)"},{"path":"/reference/ridl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"apihelper — ridl","text":"action Operation execute. See CKAN's API documentation details. .encoding HTTP POST encoding use - one json, form, multipart. uat Boolean TRUE /FALSE tells whether use https://ridl-uat.unhcr.org/ https://ridl.unhcr.org/. FALSE per default","code":""},{"path":"/reference/ridl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"apihelper — ridl","text":"httr::response object result call.","code":""},{"path":"/reference/ridl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"apihelper — ridl","text":"","code":"# ridl()"},{"path":"/reference/search.html","id":null,"dir":"Reference","previous_headings":"","what":"Searches for datasets and resources satisfying a given criteria. — search","title":"Searches for datasets and resources satisfying a given criteria. — search","text":"Searches datasets resources satisfying given criteria.","code":""},{"path":"/reference/search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searches for datasets and resources satisfying a given criteria. — search","text":"","code":"dataset_search(q = NULL, rows = NULL, start = NULL, uat = FALSE)  resource_search(query = NULL, rows = NULL, start = NULL, uat)"},{"path":"/reference/search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searches for datasets and resources satisfying a given criteria. — search","text":"q, query search query. rows maximum number matching rows (datasets) return. (optional, default: 10, upper limit: 1000) start offset complete result set returned datasets begin. uat Boolean TRUE /FALSE tells whether use https://ridl-uat.unhcr.org/ https://ridl.unhcr.org/. FALSE per default","code":""},{"path":"/reference/search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searches for datasets and resources satisfying a given criteria. — search","text":"tibble search results.","code":""},{"path":"/reference/search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Searches for datasets and resources satisfying a given criteria. — search","text":"","code":"# p <- riddle::dataset_search(q = \"tests\",  #                             uat = TRUE) # p # p$id"},{"path":"/reference/summary_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a RIDL factsheet — summary_report","title":"Generate a RIDL factsheet — summary_report","text":"Generate RIDL factsheet","code":""},{"path":"/reference/summary_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a RIDL factsheet — summary_report","text":"","code":"summary_report(year = 2022, region = \"Americas\")"},{"path":"/reference/summary_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a RIDL factsheet — summary_report","text":"year Numeric value year (instance 2020) container list container generate factsheet generate","code":""},{"path":"/reference/summary_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a RIDL factsheet — summary_report","text":"","code":"# summary_report(year = 2022, #                                    region = \"Americas\")"},{"path":"/news/index.html","id":"riddle-001","dir":"Changelog","previous_headings":"","what":"riddle 0.0.1","title":"riddle 0.0.1","text":"Contribution Edouard: Added missing parameter documentation visibility resource_metadata() Fixed non working package examples… Gave specific use case examples Fixed non-existing resource_upload function doc… far ’ve created metadata resource. next step upload data. resource_upload(r$id, path = system.file(“extdata/mtcars.csv”, package = “readr”)) Converted package dev fusen facilitate creation practical examples unit testing Replaced functions suffix package dataset functions terminology consistent used RIDL used package… package_ actually terminology used API - one used interface… strangely… Added documentation less minimal-elitist approach :) - including doc already created Ahmadou https://dickoa.gitlab.io/ridl Added UNHCR package template build pkgdown::build_site() vidonne/unhcrtemplate - _pkgdown.yml: unhcrtemplate Added Rmd report template build rapid overview dataset within one countries container - just change parameters get correct filters. Remains : Check metadata requirement correctly documented dataset resource creation Validation Error — cf https://github.com/okfn/ckanext-unhcr/blob/master/ckanext/unhcr/schemas/dataset.json#L670:L682","code":""},{"path":"/news/index.html","id":"riddle-0009000","dir":"Changelog","previous_headings":"","what":"riddle 0.0.0.9000","title":"riddle 0.0.0.9000","text":"Initial code Hisham","code":""}]
